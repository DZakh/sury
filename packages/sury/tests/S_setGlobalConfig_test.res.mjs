// Generated by ReScript, PLEASE EDIT WITH CARE

import * as S from "../src/S.res.mjs";
import * as U from "./U.res.mjs";
import Ava from "ava";

Ava("Resets S.float cache after disableNanNumberValidation=true removed", (async function (t) {
        var nan = NaN;
        S.setGlobalConfig({
              disableNanNumberValidation: true
            });
        t.deepEqual(S.parseOrThrow(nan, S.$$float), nan, undefined);
        t.deepEqual(await S.parseAsyncOrThrow(nan, S.$$float), nan, undefined);
        t.deepEqual(S.assertOrThrow(nan, S.$$float), undefined, undefined);
        S.setGlobalConfig({});
        U.assertThrows(t, (function () {
                return S.parseOrThrow(nan, S.$$float);
              }), {
              operation: "Parse",
              code: {
                TAG: "InvalidType",
                expected: S.$$float,
                received: nan
              },
              path: S.Path.empty
            });
        await U.assertThrowsAsync(t, (function () {
                return S.parseAsyncOrThrow(nan, S.$$float);
              }), {
              operation: "ParseAsync",
              code: {
                TAG: "InvalidType",
                expected: S.$$float,
                received: nan
              },
              path: S.Path.empty
            });
        t.throws((function () {
                S.assertOrThrow(nan, S.$$float);
              }), {
              message: "Failed asserting: Expected number, received NaN"
            }, undefined);
      }));

export {
  
}
/*  Not a pure module */
