// Generated by ReScript, PLEASE EDIT WITH CARE

import * as S from "../src/S.res.mjs";
import Ava from "ava";

Ava("Returns false for schema with NoOperation", (function (t) {
        t.is(S.isAsync(S.unknown), false, undefined);
      }));

Ava("Returns false for sync schema", (function (t) {
        t.is(S.isAsync(S.string), false, undefined);
      }));

Ava("Returns true for async schema", (function (t) {
        var schema = S.transform(S.string, (function (param) {
                return {
                        a: (function (i) {
                            return Promise.resolve(i);
                          })
                      };
              }));
        t.is(S.isAsync(schema), true, undefined);
      }));

Ava("Returns true for async schema after running a serializer", (function (t) {
        var schema = S.transform(S.string, (function (param) {
                return {
                        a: (function (i) {
                            return Promise.resolve(i);
                          }),
                        s: (function (i) {
                            return i;
                          })
                      };
              }));
        t.deepEqual(S.reverseConvertToJsonOrThrow("abc", schema), "abc", undefined);
        t.is(S.isAsync(schema), true, undefined);
      }));

Ava("Returns true for schema with nested async", (function (t) {
        var schema = S.tuple1(S.transform(S.string, (function (param) {
                    return {
                            a: (function (i) {
                                return Promise.resolve(i);
                              })
                          };
                  })));
        t.is(S.isAsync(schema), true, undefined);
      }));

export {
  
}
/*  Not a pure module */
