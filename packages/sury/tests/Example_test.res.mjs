// Generated by ReScript, PLEASE EDIT WITH CARE

import * as S from "../src/S.res.mjs";
import * as U from "./U.res.mjs";
import Ava from "ava";

var filmSchema = S.object(function (s) {
      return {
              id: s.f("Id", S.$$float),
              title: s.f("Title", S.string),
              tags: s.fieldOr("Tags", S.array(S.string), []),
              rating: s.f("Rating", S.union([
                        S.literal("G"),
                        S.literal("PG"),
                        S.literal("PG13"),
                        S.literal("R")
                      ])),
              deprecatedAgeRestriction: s.f("Age", S.meta(S.option(S.$$int), {
                        description: "Use rating instead",
                        deprecated: true
                      }))
            };
    });

Ava("Example", (function (t) {
        t.deepEqual(S.parseOrThrow({"Id": 1, "Title": "My first film", "Rating": "R", "Age": 17}, filmSchema), {
              id: 1,
              title: "My first film",
              tags: [],
              rating: "R",
              deprecatedAgeRestriction: 17
            }, undefined);
        t.deepEqual(S.reverseConvertToJsonOrThrow({
                  id: 2,
                  title: "Sad & sed",
                  tags: ["Loved"],
                  rating: "PG13",
                  deprecatedAgeRestriction: undefined
                }, filmSchema), {
        "Id": 2,
        "Title": "Sad & sed",
        "Rating": "PG13",
        "Tags": ["Loved"],
        "Age": undefined,
      }, undefined);
      }));

Ava("Compiled parse code snapshot", (function (t) {
        U.assertCompiledCode(t, filmSchema, "Parse", "i=>{if(typeof i!==\"object\"||!i){e[7](i)}let v0=i[\"Id\"],v1=i[\"Title\"],v2=i[\"Tags\"],v6=i[\"Rating\"],v7=i[\"Age\"];if(typeof v0!==\"number\"||Number.isNaN(v0)){e[0](v0)}if(typeof v1!==\"string\"){e[1](v1)}if(Array.isArray(v2)){for(let v3=0;v3<v2.length;++v3){let v5=v2[v3];try{if(typeof v5!==\"string\"){e[2](v5)}}catch(v4){if(v4&&v4.s===s){v4.path=\"[\\\"Tags\\\"]\"+\'[\"\'+v3+\'\"]\'+v4.path}throw v4}}}else if(!(v2===void 0)){e[3](v2)}if(!(typeof v6===\"string\"&&(v6===\"G\"||v6===\"PG\"||v6===\"PG13\"||v6===\"R\"))){e[5](v6)}if(!(typeof v7===\"number\"&&v7<2147483647&&v7>-2147483648&&v7%1===0||v7===void 0)){e[6](v7)}return {\"id\":v0,\"title\":v1,\"tags\":v2===void 0?e[4]:v2,\"rating\":v6,\"deprecatedAgeRestriction\":v7,}}", undefined);
      }));

Ava("Compiled serialize code snapshot", (function (t) {
        U.assertCompiledCode(t, filmSchema, "ReverseConvert", "i=>{let v0=i[\"tags\"],v3=i[\"rating\"],v4=i[\"deprecatedAgeRestriction\"];return {\"Id\":i[\"id\"],\"Title\":i[\"title\"],\"Tags\":v0,\"Rating\":v3,\"Age\":v4,}}", undefined);
      }));

export {
  filmSchema ,
}
/* filmSchema Not a pure module */
