// Generated by ReScript, PLEASE EDIT WITH CARE

import * as S from "../src/S.res.mjs";
import Ava from "ava";

Ava("Successfully parses", (function (t) {
        t.deepEqual(S.reverseConvertToJsonStringOrThrow(true, S.bool, undefined), "true", undefined);
      }));

Ava("Successfully parses object", (function (t) {
        var schema = S.object(function (s) {
              return {
                      id: s.f("id", S.string),
                      isDeleted: s.f("isDeleted", S.bool)
                    };
            });
        t.deepEqual(S.reverseConvertToJsonStringOrThrow({
                  id: "0",
                  isDeleted: true
                }, schema, undefined), "{\"id\":\"0\",\"isDeleted\":true}", undefined);
      }));

Ava("Successfully parses object with space", (function (t) {
        var schema = S.object(function (s) {
              return {
                      id: s.f("id", S.string),
                      isDeleted: s.f("isDeleted", S.bool)
                    };
            });
        t.deepEqual(S.reverseConvertToJsonStringOrThrow({
                  id: "0",
                  isDeleted: true
                }, schema, 2), "{\n  \"id\": \"0\",\n  \"isDeleted\": true\n}", undefined);
      }));

Ava("Fails to serialize Unknown schema", (function (t) {
        t.throws((function () {
                return S.reverseConvertToJsonStringOrThrow(123, S.unknown, undefined);
              }), {
              message: "Failed converting to JSON: The 'unknown' schema cannot be converted to JSON"
            }, undefined);
      }));

export {
  
}
/*  Not a pure module */
