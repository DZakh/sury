// Generated by ReScript, PLEASE EDIT WITH CARE

import * as U from "../utils/U.res.mjs";
import Ava from "ava";
import * as S$RescriptSchema from "rescript-schema/src/S.res.mjs";

var ratingSchema = S$RescriptSchema.union([
      S$RescriptSchema.literal("G"),
      S$RescriptSchema.literal("PG"),
      S$RescriptSchema.literal("PG13"),
      S$RescriptSchema.literal("R")
    ]);

var filmSchema = S$RescriptSchema.schema(function (s) {
      return {
              Id: s.m(S$RescriptSchema.$$float),
              Title: s.m(S$RescriptSchema.string),
              Tags: s.m(S$RescriptSchema.$$Option.getOr(S$RescriptSchema.option(S$RescriptSchema.array(S$RescriptSchema.string)), [])),
              Rating: s.m(ratingSchema),
              Age: s.m(S$RescriptSchema.deprecated(S$RescriptSchema.option(S$RescriptSchema.$$int), "Use rating instead"))
            };
    });

Ava("Main example", (function (t) {
        U.assertEqualSchemas(t, filmSchema, S$RescriptSchema.object(function (s) {
                  return {
                          Id: s.f("Id", S$RescriptSchema.$$float),
                          Title: s.f("Title", S$RescriptSchema.string),
                          Tags: s.fieldOr("Tags", S$RescriptSchema.array(S$RescriptSchema.string), []),
                          Rating: s.f("Rating", S$RescriptSchema.union([
                                    S$RescriptSchema.literal("G"),
                                    S$RescriptSchema.literal("PG"),
                                    S$RescriptSchema.literal("PG13"),
                                    S$RescriptSchema.literal("R")
                                  ])),
                          Age: s.f("Age", S$RescriptSchema.deprecated(S$RescriptSchema.option(S$RescriptSchema.$$int), "Use rating instead"))
                        };
                }), undefined);
      }));

var matchesSchema = S$RescriptSchema.url(S$RescriptSchema.string, undefined);

Ava("@s.matches", (function (t) {
        U.assertEqualSchemas(t, matchesSchema, S$RescriptSchema.url(S$RescriptSchema.string, undefined), undefined);
      }));

var defaultSchema = S$RescriptSchema.$$Option.getOr(S$RescriptSchema.option(S$RescriptSchema.string), "Unknown");

Ava("@s.default", (function (t) {
        U.assertEqualSchemas(t, defaultSchema, S$RescriptSchema.$$Option.getOr(S$RescriptSchema.option(S$RescriptSchema.string), "Unknown"), undefined);
      }));

var defaultWithSchema = S$RescriptSchema.$$Option.getOrWith(S$RescriptSchema.option(S$RescriptSchema.array(S$RescriptSchema.string)), (function () {
        return [];
      }));

Ava("@s.defaultWith", (function (t) {
        U.assertEqualSchemas(t, defaultWithSchema, S$RescriptSchema.$$Option.getOrWith(S$RescriptSchema.option(S$RescriptSchema.array(S$RescriptSchema.string)), (function () {
                    return [];
                  })), undefined);
      }));

var nullSchema = S$RescriptSchema.$$null(S$RescriptSchema.string);

Ava("@s.null", (function (t) {
        U.assertEqualSchemas(t, nullSchema, S$RescriptSchema.$$null(S$RescriptSchema.string), undefined);
      }));

var nullWithDefaultSchema = S$RescriptSchema.$$Option.getOr(S$RescriptSchema.$$null(S$RescriptSchema.string), "Unknown");

Ava("@s.null with @s.default", (function (t) {
        U.assertEqualSchemas(t, nullWithDefaultSchema, S$RescriptSchema.$$Option.getOr(S$RescriptSchema.$$null(S$RescriptSchema.string), "Unknown"), undefined);
      }));

var deprecatedSchema = S$RescriptSchema.deprecated(S$RescriptSchema.string, "Will be removed in APIv2");

Ava("@s.deprecated", (function (t) {
        U.assertEqualSchemas(t, deprecatedSchema, S$RescriptSchema.deprecated(S$RescriptSchema.string, "Will be removed in APIv2"), undefined);
      }));

var describeSchema = S$RescriptSchema.description(S$RescriptSchema.string, "A useful bit of text, if you know what to do with it.");

Ava("@s.description", (function (t) {
        U.assertEqualSchemas(t, describeSchema, S$RescriptSchema.description(S$RescriptSchema.string, "A useful bit of text, if you know what to do with it."), undefined);
      }));

export {
  ratingSchema ,
  filmSchema ,
  matchesSchema ,
  defaultSchema ,
  defaultWithSchema ,
  nullSchema ,
  nullWithDefaultSchema ,
  deprecatedSchema ,
  describeSchema ,
}
/* ratingSchema Not a pure module */
